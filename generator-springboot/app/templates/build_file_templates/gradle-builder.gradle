plugins {
  id 'org.springframework.boot' version '2.7.12'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'jacoco'
  id 'org.sonarqube' version '2.8'
}

group ='<%=groupId%>'
version ='<%=version%>' 
sourceCompatibility = '11'

repositories {
  mavenCentral()
}


wrapper {
  gradleVersion = '8.0.1'
}


dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  // Spring security
  implementation 'org.springframework.boot:spring-boot-starter-security'


  //lombok
  compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
  implementation 'org.projectlombok:lombok:1.18.24'
  testCompileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  // Springdoc
  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'junit' // excluding junit 4
  }


  implementation 'javax.transaction:javax.transaction-api'

  implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.2.1'
  runtimeOnly 'com.h2database:h2'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.0.1'
  testImplementation 'org.junit.platform:junit-platform-launcher:1.4.2'
  testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'
  testImplementation 'org.junit.platform:junit-platform-launcher:1.4.2'
  testImplementation 'com.h2database:h2'
  testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.9.0'
  testImplementation 'com.tngtech.archunit:archunit-junit5:1.0.1'

  // gson
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

  // jolt
  implementation 'com.bazaarvoice.jolt:jolt-core:0.1.7'
  implementation 'com.bazaarvoice.jolt:json-utils:0.1.7'

  implementation fileTree(dir: 'libs', include: ['*.jar'])
  runtimeOnly 'com.h2database:h2'
  //database - postgresql
  implementation 'org.postgresql:postgresql:42.2.2'

  // jolt
  implementation 'com.bazaarvoice.jolt:jolt-core:0.1.5'
  implementation 'com.bazaarvoice.jolt:json-utils:0.1.5'

  // Flyway
  implementation "org.flywaydb:flyway-core"

  // ModelMapper
  implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'
}

sonarqube {
  properties {
      property 'sonar.host.url', 'http://localhost:9000'
      property 'sonar.login', 'admin'
      property 'sonar.password', property('sonarPassword')
      property "sonar.java.source", "11"
      property "sonar.java.coveragePlugin", "jacoco"
      property "sonar.jacoco.reportPaths", "${buildDir}/reports/tests/jacocoTestReport.xml"
      property 'sonar.coverage.exclusions', "**/com/fincuro/accounts/dto/**, **/com/fincuro/accounts/domain/**"
  }
}

jacocoTestReport {
  reports {
      xml.destination file("${buildDir}/reports/tests/jacocoTestReport.xml")
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
